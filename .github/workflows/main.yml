name: build_specification

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v1
        
      - name: Install dependencies
        run: |
          npm install markdown-pdf

      - name: Generate PDFs for glyphs
        run: python3 scripts/rebuild_glyphs.py

      - name: Generate tex file for examples appendix
        run: |
          cd scripts
          python3 generate_examples_appendix.py

      - name: Compile LaTeX document
        uses: dante-ev/latex-action@v0.2.0
        with:
          working_directory: specification
          root_file: sbolvisual.tex

      - name: Move PDF
        run: mkdir -p output && cp specification/sbolvisual.pdf output

      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: PDF
          path: output

  build_sampler:
      runs-on: ubuntu-latest
      steps:
      - name: Set up Git repository
        uses: actions/checkout@v1

      - name: Install dependencies
        run: |
          sudo apt-get install libcairo2-dev build-essential python3-setuptools
          cd scripts
          pip3 install -r requirements.txt

      - name: Build samplers
        run: python3 scripts/generate_sampler.py

      - name: Upload samplers as artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: samplers
          path: sampler

      - name: Commit sampler file
        if: ${{ github.event_name == 'push' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add sampler/
          git diff-index --quiet HEAD || git commit -m "Automatically re-generate sampler"
          
      - name: Push changes
        if: ${{ github.event_name == 'push' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build_glph_zipfiles:
      runs-on: ubuntu-latest
      steps:
      - name: Set up Git repository
        uses: actions/checkout@v1

      - name: Install dependencies
        run: |
          sudo apt-get install libcairo2-dev build-essential python3-setuptools
          cd scripts
          pip3 install -r requirements.txt

      - name: Make directories
        run: |
          mkdir -p glyph_collections/svg
          mkdir -p glyph_collections/pdf
          mkdir -p glyph_collections/png

      - name: Make collections of glyphs
        run: python3 scripts/collate_glyphs.py

      - name: Upload zipfile of SVGs
        uses: actions/upload-artifact@v1.0.0
        with:
          name: SVG Glyphs
          path: glyph_collections/svg

      - name: Upload zipfile of PDFs
        uses: actions/upload-artifact@v1.0.0
        with:
          name: PDF Glyphs
          path: glyph_collections/pdf

      - name: Upload zipfile of PNGs
        uses: actions/upload-artifact@v1.0.0
        with:
          name: PNG Glyphs
          path: glyph_collections/png

  specification_examples:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
        with:
          path: SBOL-visual

      - name: Checkout website repo
        uses: actions/checkout@v2
        with:
          repository: SynBioDex/SbolStandardWebsite
          path: SbolStandardWebsite

      - name: Generate PNG versions of example diagrams
        run: |
          sudo apt-get update && sudo apt-get install ghostscript
          sudo sed -i 's/^.*policy.*coder.*none.*PDF.*//' /etc/ImageMagick-6/policy.xml
          cd SBOL-visual/specification/figures/apdx-examples/
          pwd
          ls -al
          for file in *.pdf; do convert $file -background white  "./pngversions/`basename $file .pdf`.png"; done

      - name: Generate markdown glyph examples page
        run: |
          cd SBOL-visual/scripts
          python3 generate_examples_appendix.py

      - name: Copy generated files to website repo
        run: |
          cd SBOL-visual
          cp scripts/examples.md ../SbolStandardWebsite/content/visual-spec-examples/_index.md
          cp -r specification/figures/apdx-examples/pngversions/* ../SbolStandardWebsite/static/media/SBOLVisualSpecExamples

      - name: Setup SSH agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

          echo "{{ secrets.GH_DEPLOY_KEY }}" > ~/.ssh/.id_rsa
          sed -i -e "s#\\\\n#\n#g" ~/.ssh/id_rsa
          chmod 0600 ~/.ssh/.id_rsa
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add ~/.ssh/.id_rsa
          # chmod 0600 .github/workflows/secrets/id_rsa
          # ssh-add .github/workflows/secrets/id_rsa

      - name: Commit and push to website repo
        if: ${{ github.event_name == 'push' }}
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          cd SbolStandardWebsite
          git add .
          git diff-index --quiet HEAD || (git commit -m "Automatically re-generate specification examples" && git push origin master)
